{"version":3,"sources":["components/TodoItem.js","components/CompletedItem.js","components/TodosList.js","components/Header.js","components/InputTodo.js","components/RandomQuote.js","components/TodoContainer.js","index.js"],"names":["TodoItem","props","completedStyle","color","opacity","textDecoration","completed","id","title","tag","todo","React","createElement","className","type","checked","onChange","handleChangeProps","concat","toLowerCase","style","onClick","deleteTodoProps","CompletedItem","completedTaskList","TodosList","todos","map","key","length","Header","paddingBottom","lineHeight","fontSize","marginBottom","textAlign","InputTodo","setTitle","useState","selectedTagValue","setSelectedTagValue","selectedUserValue","setSelectedUserValue","tagNew","setSelectedNewTagValue","value","label","setValueT","Fragment","placeholder","e","target","name","option","preventDefault","aggTag","newT","alert","disabled","addTodoProps","deleteAllTodo","completeAll","RandomQuote","quote","setQuote","text","author","useEffect","fetch","then","response","json","data","console","error","catch","TodoContainer","setTodos","setCompletedTaskList","delTodos","addTodoItem","newTodo","uuidv4","updComplete","push","filter","i","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.31af9c4d.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction TodoItem(props) {\n  const completedStyle = {\n    \n    color: \"black\",\n    opacity: 0.4,\n    textDecoration: \"line-through\",\n  };\n\n  const { completed, id, title, tag} = props.todo;\n\n  //console.log(\"todo\", props.todo);\n  return (\n    <li className=\"todo-item\">\n      <div className=\"checked-tag\">\n        <input\n          type=\"checkbox\"\n          checked={completed}\n          onChange={() => props.handleChangeProps(id)}\n        />\n        <span\n          className={`${tag.toLowerCase()} tag-item`}\n          style={completed ? completedStyle : null}\n        >\n          {tag}\n        </span>\n      </div>\n      <div className=\"todo-heading\">\n        <h3 style={completed ? completedStyle : null}>{title}</h3>\n      </div>\n     \n        \n        <button onClick={() => props.deleteTodoProps(id)}>Delete</button>\n     \n    </li>\n  );\n}\n\nexport default TodoItem;\n","import React from \"react\";\n\nfunction CompletedItem(props) {\n  const completedStyle = {\n    \n    color: \"black\",\n    opacity: 1,\n    \n  };\n\n  const { completed, title, tag} = props.completedTaskList;\n\n  return (\n    <li className=\"todo-item\">\n      <div className=\"checked-tag\">\n        <span className={`${tag.toLowerCase()} tag-item`}>{tag}</span>\n      </div>\n      <div className=\"todo-heading\">\n        <h3 style={completed ? completedStyle : null}>{title}</h3>\n      </div>\n      \n    </li>\n  );\n}\n\nexport default CompletedItem;\n","import React from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport CompletedItem from \"./CompletedItem\";\n\nfunction TodosList(props) {\n  return (\n    <div>\n      {props.todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleChangeProps={props.handleChangeProps}\n          deleteTodoProps={props.deleteTodoProps}\n        />\n      ))}\n\n      {props.completedTaskList.length > 0 && (\n        <div className=\"completed-task\">\n          <h2>Completed Items</h2>\n          {props.completedTaskList.map((completed) => (\n            <CompletedItem\n              key={completed.id}\n              completedTaskList={completed}\n              handleChangeProps={props.handleChangeProps}\n              deleteTodoProps={props.deleteTodoProps}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TodosList;\n","import React from \"react\";\n\nconst Header = () => {\n  //const headerStyle = ;\n  return (\n    <header style={{\n      paddingBottom: \"20px\",\n      lineHeight: \"2em\",\n    }}>\n      <h1\n        style={{\n          fontSize: \"25px\",\n          marginBottom: \"15px\",\n          textAlign: \"center\",\n          color: \"#11324e\",\n        }}\n      >\n        Todo App\n      </h1>\n      \n    </header>\n  );\n};\n\nexport default Header;\n","import React, { useState } from \"react\";\n\nfunction InputTodo(props) {\n  const [title, setTitle] = useState(\"\");\n  const [selectedTagValue, setSelectedTagValue] = useState(\"\");\n  const [selectedUserValue, setSelectedUserValue] = useState(\"\");\n  \n  let tagOptions = [\n    { value: \"Home\", label: \"Home\" },\n    { value: \"Work\", label: \"Work\" },\n    { value: \"Important\", label: \"Important\" },\n   \n  ];\n  const [tagNew,setSelectedNewTagValue]=useState(tagOptions);\n  const [value,setValueT]=useState(\"\");\n  \n \n  const handleSelectTagChange = (e) => {\n    setSelectedTagValue(e.target.value);\n  };\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.addTodoProps(title, selectedTagValue, selectedUserValue);\n    setTitle(\"\");\n    setSelectedTagValue(\"\");\n    setSelectedUserValue(\"\");\n      \n  };\n  \n  const handleChange = (e) => {\n    setTitle(e.target.value);\n  };\n  const handleChangeNewTag = (e) => {\n   \n    \n    e.preventDefault();\n    setValueT(e.target.value);\n  };\n  const aggTag=()=>{\n    if(value){\n      const newT=tagNew.concat({value:value,label:value});\n      setSelectedNewTagValue(newT);\n      setValueT(\"\");\n\n    }\n    else{\n      alert('enter valid tag');\n    }\n    \n    \n\n  };\n  \n\n  return (\n    <>\n    <form  className=\"form-container\">\n      \n      <input\n        type=\"text\"\n        className=\"input-text\"\n        placeholder=\"Add todo...\"\n        value={title}\n        //name=\"title\"\n        onChange={handleChange}\n      />\n      <select\n        name=\"tags\"\n        value={selectedTagValue}\n        className=\"select-input\"\n        onChange={handleSelectTagChange}\n      >\n        <option value=\"\">Tags</option>\n        {tagNew.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n      <input\n      type=\"text\"\n      className=\"addTag\"\n      placeholder=\"Add your own tag...\"\n      value={value}\n      name=\"newTag\"\n      onChange={handleChangeNewTag}>\n      </input>\n      <button className=\"new-tag\" onClick={(e)=>{e.preventDefault();aggTag();}}>Submit new tag</button>\n      <button\n        type=\"submit\"\n        disabled={title && selectedTagValue ? false : true}\n        className=\"input-submit\"\n        value=\"Submit\"\n        onClick={handleSubmit}\n      >Submit</button>\n      <button className=\"delete-button\" onClick={(e)=>{e.preventDefault();props.deleteAllTodo()}}>Delete</button>\n      <button className=\"complete-button\" onClick={(e)=>{e.preventDefault();props.completeAll();}}>Completed All</button>\n    \n    </form>\n    \n    \n\n    \n    </>\n  );\n}\n\nexport default InputTodo;\n","// RandomQuote.js\nimport React, { useEffect, useState } from 'react';\n\nfunction RandomQuote() {\n    const [quote, setQuote] = useState({ text: '', author: '' });\n\n    useEffect(() => {\n        fetch('http://127.0.0.1:5000/api/quotes/random')\n\n            .then(response => response.json())\n            .then(data => {\n                if(data.text && data.author) {\n                    setQuote({ text: data.text, author: data.author });\n                } else {\n                    console.error('No quote found:', data);\n                }\n            })\n            .catch(error => console.error('Error fetching quote:', error));\n    }, []);\n\n    return (\n        <div>\n            <p>\"{quote.text}\"</p>\n            <cite>- {quote.author}</cite>\n        </div>\n    );\n}\n\nexport default RandomQuote;\n","import React, { useState } from \"react\";\nimport TodosList from \"./TodosList\";\nimport Header from \"./Header\";\nimport InputTodo from \"./InputTodo\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport RandomQuote from \"./RandomQuote\"; \nfunction TodoContainer() {\n  const todoList = [\n    \n  ];\n\n  const [todos, setTodos] = useState(todoList);\n  const [completedTaskList, setCompletedTaskList] = useState([]);\n\n  const handleChange = (id) => {\n    todos.map((todo) => {\n      if (todo.id === id) {\n        todo.completed = !todo.completed;\n        setCompletedTaskList([...completedTaskList, todo]);\n      }\n      return todo;\n    });\n    setTodos(todos.filter((todo, i) => todo.id !== id));\n\n  };\n  \n\n  const delTodo = (id) => {\n    setTodos([\n      ...todos.filter((todo) => {\n        return todo.id !== id;\n      }),\n    ]);\n  };\n  const delTodos = () => {\n    setTodos([\n      \n    ]);\n  };\n  const completeAll=()=>{\n    let updComplete=completedTaskList;\n\n    todos.map((todo) => {\n      if (todo.completed==false) {\n        todo.completed = !todo.completed;\n        //setCompletedTaskList([...completedTaskList, todo]);\n        updComplete.push(todo);\n      }\n      //return todo;\n    });\n    setCompletedTaskList(updComplete);\n    delTodos();\n    //setTodos([]);\n    \n    //setCompletedTaskList(todos);\n    //console.log(completed);\n\n    \n  \n\n\n    \n  }\n  const addTodoItem = (title, tag) => {\n    const newTodo = {\n      id: uuidv4(),\n      title: title,\n      tag: tag,\n      completed: false,\n    };\n    setTodos([...todos, newTodo]);\n  };\n\n  return (\n    <div className=\"todo-body\">\n      \n      <Header />\n      <RandomQuote /> \n      <InputTodo addTodoProps={addTodoItem} deleteAllTodo={delTodos} completeAll={completeAll}/>\n      <TodosList\n        todos={todos}\n        handleChangeProps={handleChange}\n        deleteTodoProps={delTodo}\n        completedTaskList={completedTaskList}\n        \n      />\n    </div>\n  );\n}\n\nexport default TodoContainer;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n//component file\nimport TodoContainer from \"./components/TodoContainer\";\nimport \"./App.css\";\n\n\nReactDOM.render(<TodoContainer />, document.getElementById(\"root\"));\n"],"sourceRoot":""}